#TODO
# - reloader template
# - network segmentation
# - idea: ops-prometheus/sidecar next to store, for store/query monitoring 

version: "3.5"

networks:
  cloudstorage:
  ops:
  c1:
  c2:
  c3:

services:
  minio:
    image: minio/minio:latest
    ports:
      - 19000:9000
    networks:
      - cloudstorage
    volumes:
      - ./data/minio:/data
    environment:
      - "MINIO_ACCESS_KEY=THANOS"
      - "MINIO_SECRET_KEY=ITSTHANOSTIME"
    entrypoint: sh
    # This is a workaropund for creating the bucket ""
    command: -c 'mkdir -p /data/thanosbucket && /usr/bin/minio server /data'

  prom1:
    hostname: prom1
    domainname: domain.local
    image: prom/prometheus:v2.4.3
    volumes:
      - ./data/prom1:/data
      - ./config/prom1:/config
    command:
      - --web.listen-address=0.0.0.0:9090
      - --config.file=/config/prometheus.yml
      - --storage.tsdb.path=/data
      - --storage.tsdb.retention=6h
      - --storage.tsdb.min-block-duration=1h
      - --storage.tsdb.max-block-duration=1h
      - --web.enable-lifecycle
      - --log.level=warn
    ports:
      - 9091:9090
    networks:
      - c1
  prom2:
    hostname: prom2
    domainname: domain.local
    image: prom/prometheus:v2.4.3
    volumes:
      - ./data/prom2:/data
      - ./config/prom2:/config
    command:
      - --web.listen-address=0.0.0.0:9090
      - --config.file=/config/prometheus.yml
      - --storage.tsdb.path=/data
      - --storage.tsdb.retention=6h
      - --storage.tsdb.min-block-duration=1h
      - --storage.tsdb.max-block-duration=1h
      - --web.enable-lifecycle
      - --log.level=warn
    ports:
      - 9092:9090
    networks:
      - c2
  prom3:
    hostname: prom3
    domainname: domain.local
    image: prom/prometheus:v2.4.3
    volumes:
      - ./data/prom3:/data
      - ./config/prom3:/config
    command:
      - --web.listen-address=0.0.0.0:9090
      - --config.file=/config/prometheus.yml
      - --storage.tsdb.path=/data
      - --storage.tsdb.retention=6h
      - --storage.tsdb.min-block-duration=1h
      - --storage.tsdb.max-block-duration=1h
      - --web.enable-lifecycle
      - --log.level=warn
    ports:
      - 9093:9090
    networks:
      - c3

  sidecar1:
    hostname: sidecar1
    domainname: domain.local
    depends_on:
      - prom1
    image: improbable/thanos:${THANOS_TAG}
    volumes:
      - ./data/prom1:/data
      - ./config/prom1:/config
      - ./template:/template
      - ./creds:/creds
    command:
      - sidecar
      - --debug.name=sidecar1
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --prometheus.url=http://prom1:9090
      - --tsdb.path=/data
      - --objstore.config-file=/creds/minio.yaml
      - --cluster.address=0.0.0.0:10900
      - --cluster.peers=query1:10900
      #- --reloader.config-file=/template/prometheus.yml.tpl
      #- --reloader.config-envsubst-file=/config/prometheus.yml
    ports:
      - 10901:10902
    networks:
      - cloudstorage
      - c1
    environment:
      - PROM_INSTANCE=prom1
      - SIDECAR_INSTANCE=sidecar1
      - QUERY_INSTANCE=query1
    #  - GOOGLE_APPLICATION_CREDENTIALS=/creds/gcs-credentials.json
  sidecar2:
    hostname: sidecar2
    domainname: domain.local
    depends_on:
      - prom2
    image: improbable/thanos:${THANOS_TAG}
    volumes:
      - ./data/prom2:/data
      - ./config/prom2:/config
      - ./template:/template
      - ./creds:/creds
    command:
      - sidecar
      - --debug.name=sidecar2
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --prometheus.url=http://prom2:9090
      - --tsdb.path=/data
      - --objstore.config-file=/creds/minio.yaml
      - --cluster.address=0.0.0.0:10900
      - --cluster.peers=query2:10900
      #- --reloader.config-file=/template/prometheus.yml.tpl
      #- --reloader.config-envsubst-file=/config/prometheus.yml
    ports:
      - 10902:10902
    networks:
      - cloudstorage
      - c2
    environment:
      - PROM_INSTANCE=prom2
      - SIDECAR_INSTANCE=sidecar2
      - QUERY_INSTANCE=query2
    #  - GOOGLE_APPLICATION_CREDENTIALS=/creds/gcs-credentials.json
  sidecar3:
    hostname: sidecar2
    domainname: domain.local
    depends_on:
      - prom3
    image: improbable/thanos:${THANOS_TAG}
    volumes:
      - ./data/prom3:/data
      - ./config/prom3:/config
      - ./template:/template
      - ./creds:/creds
    command:
      - sidecar
      - --debug.name=sidecar3
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --prometheus.url=http://prom3:9090
      - --tsdb.path=/data
      - --objstore.config-file=/creds/minio.yaml
      - --cluster.address=0.0.0.0:10900
      - --cluster.peers=query3:10900
      #- --reloader.config-file=/template/prometheus.yml.tpl
      #- --reloader.config-envsubst-file=/config/prometheus.yml
    ports:
      - 19193:10902
    networks:
      - cloudstorage
      - c2
    environment:
      - PROM_INSTANCE=prom3
      - SIDECAR_INSTANCE=sidecar3
      - QUERY_INSTANCE=query3
    #  - GOOGLE_APPLICATION_CREDENTIALS=/creds/gcs-credentials.json

  store:
    depends_on:
      - minio
    image: improbable/thanos:${THANOS_TAG}
    volumes:
      - ./data/store:/data
      - ./creds:/creds
    command:
      - store
      - --debug.name=store
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --data-dir=/data
      - --objstore.config-file=/creds/minio.yaml
      - --cluster.address=0.0.0.0:10900
      #TODO all query servers 
      - --cluster.peers=query1:10900
    ports:
      - 10903:10902
    networks:
      - cloudstorage
      - ops
    #environment:
    #  - GOOGLE_APPLICATION_CREDENTIALS=/creds/gcs-credentials.json

  #compact:
  #  depends_on:
  #    - store
  #  image: improbable/thanos:${THANOS_TAG}
  #  volumes:
  #    - ./data/compact:/data
  #    - ./creds:/creds
  #  command:
  #    - compact
  #    - --debug.name=compact
  #    - --log.level=debug
  #    - --http-address=0.0.0.0:10902
  #    - --data-dir=/data
  #    - --objstore.config-file=/creds/minio.yaml
  #    - --retention.resolution-raw=1d
  #    - --retention.resolution-5m=2d
  #    - --retention.resolution-1h=5d
  #  ports:
  #    - 10904:10902
  #  networks:
  #    - cloudstorage
  #  #environment:
  #  #  - GOOGLE_APPLICATION_CREDENTIALS=/creds/gcs-credentials.json

  query1:
    depends_on:
      - store
    image: improbable/thanos:${THANOS_TAG}
    command:
      - query
      - --debug.name=query1
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --cluster.address=0.0.0.0:10900
      - --cluster.peers=store:10900
    ports:
      - 19101:10902
    networks:
      - ops
      - c1
  query2:
    depends_on:
      - store
    image: improbable/thanos:${THANOS_TAG}
    command:
      - query
      - --debug.name=query2
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --cluster.address=0.0.0.0:10900
      - --cluster.peers=store:10900
    ports:
      - 19102:10902
    networks:
      - ops
      - c2
  query3:
    depends_on:
      - store
    image: improbable/thanos:${THANOS_TAG}
    command:
      - query
      - --debug.name=query3
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --cluster.address=0.0.0.0:10900
      - --cluster.peers=store:10900
    ports:
      - 19103:10902
    networks:
      - ops
      - c3