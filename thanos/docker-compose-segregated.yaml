version: "3.5"

volumes:
  minio: {}
  c1-prom: {}
  c2-prom: {}
  c3-prom: {}
  #compact: {}
  store: {}

networks:
  c1:
  c2:
  c3:
  store:
  ops:

services:
  minio:
    image: minio/minio:latest
    volumes:
      - minio:/export
    networks:
      - store
    environment:
      - "MINIO_ACCESS_KEY=THANOS"
      - "MINIO_SECRET_KEY=ITSTHANOSTIME"
    entrypoint: sh
    # This is a workaropund for creating the bucket ""
    command: -c 'mkdir -p /export/thanosbucket && /usr/bin/minio server /export'
    ports:
      - 19000:9000

  c1-prom:
    #image: prom/prometheus:v2.4.3
    image: thanos-exp/prometheus:latest
    volumes:
      - ./config/c1-prom:/config
      - c1-prom:/prometheus
    networks:
      - c1
    command:
      - --web.listen-address=0.0.0.0:9090
      - --config.file=/config/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention=6h
      - --storage.tsdb.min-block-duration=1h
      - --storage.tsdb.max-block-duration=1h
      - --web.enable-lifecycle
      - --log.level=warn
    ports:
      - 9091:9090
  c2-prom:
    #image: prom/prometheus:v2.4.3
    image: thanos-exp/prometheus:latest
    volumes:
      - ./config/c2-prom:/config
      - c2-prom:/prometheus
    networks:
      - c2
    command:
      - --web.listen-address=0.0.0.0:9090
      - --config.file=/config/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention=6h
      - --storage.tsdb.min-block-duration=1h
      - --storage.tsdb.max-block-duration=1h
      - --web.enable-lifecycle
      - --log.level=warn
    ports:
      - 9092:9090
  c3-prom:
    #image: prom/prometheus:v2.4.3
    image: thanos-exp/prometheus:latest
    volumes:
      - ./config/c3-prom:/config
      - c3-prom:/prometheus
    command:
      - --web.listen-address=0.0.0.0:9090
      - --config.file=/config/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention=6h
      - --storage.tsdb.min-block-duration=1h
      - --storage.tsdb.max-block-duration=1h
      - --web.enable-lifecycle
      - --log.level=warn
    ports:
      - 9093:9090
    networks:
      - c3

  c1-sidecar:
    depends_on:
      - c1-prom
    #image: improbable/thanos:${THANOS_TAG}
    image: thanos-exp/thanos:latest
    volumes:
      - ./config/c1-prom:/config
      - ./template:/template
      - ./creds:/creds
      - c1-prom:/prometheus
    networks:
      - c1
      - store
    environment:
      - PROM_INSTANCE=c1-prom
      - SIDECAR_INSTANCE=c1-sidecar
      - QUERY_INSTANCE=c1-query
    #  - GOOGLE_APPLICATION_CREDENTIALS=/creds/gcs-credentials.json
    command:
      - sidecar
      - --debug.name=c1-sidecar
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --prometheus.url=http://c1-prom:9090
      - --tsdb.path=/prometheus
      - --objstore.config-file=/creds/minio.yaml
      - --cluster.address=0.0.0.0:10900
      - --cluster.peers=c1-query:10900
      #- --reloader.config-file=/template/prometheus.yml.tpl
      #- --reloader.config-envsubst-file=/config/prometheus.yml
    ports:
      - 10901:10902
  c2-sidecar:
    depends_on:
      - c2-prom
    #image: improbable/thanos:${THANOS_TAG}
    image: thanos-exp/thanos:latest
    volumes:
      - ./config/c2-prom:/config
      - ./template:/template
      - ./creds:/creds
      - c2-prom:/prometheus
    networks:
      - c2
      - store
    environment:
      - PROM_INSTANCE=c2-prom
      - SIDECAR_INSTANCE=c2-sidecar
      - QUERY_INSTANCE=c2-query
    #  - GOOGLE_APPLICATION_CREDENTIALS=/creds/gcs-credentials.json
    command:
      - sidecar
      - --debug.name=c2-sidecar
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --prometheus.url=http://c2-prom:9090
      - --tsdb.path=/prometheus
      - --objstore.config-file=/creds/minio.yaml
      - --cluster.address=0.0.0.0:10900
      - --cluster.peers=c2-query:10900
      #- --reloader.config-file=/template/prometheus.yml.tpl
      #- --reloader.config-envsubst-file=/config/prometheus.yml
    ports:
      - 10902:10902
  c3-sidecar:
    depends_on:
      - c3-prom
    #image: improbable/thanos:${THANOS_TAG}
    image: thanos-exp/thanos:latest
    volumes:
      - ./config/c3-prom:/config
      - ./template:/template
      - ./creds:/creds
      - c3-prom:/prometheus
    networks:
      - c3
      - store
    environment:
      - PROM_INSTANCE=c3-prom
      - SIDECAR_INSTANCE=c3-sidecar
      - QUERY_INSTANCE=c3-query
    #  - GOOGLE_APPLICATION_CREDENTIALS=/creds/gcs-credentials.json
    command:
      - sidecar
      - --debug.name=c3-sidecar
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --prometheus.url=http://c3-prom:9090
      - --tsdb.path=/prometheus
      - --objstore.config-file=/creds/minio.yaml
      - --cluster.address=0.0.0.0:10900
      - --cluster.peers=c3-query:10900
      #- --reloader.config-file=/template/prometheus.yml.tpl
      #- --reloader.config-envsubst-file=/config/prometheus.yml
    ports:
      - 19193:10902

  store:
    depends_on:
      - minio
    #image: improbable/thanos:${THANOS_TAG}
    image: thanos-exp/thanos:latest
    volumes:
      - ./creds:/creds
      - store:/thanos_store
    networks:
      - ops
      - store
    #environment:
    #  - GOOGLE_APPLICATION_CREDENTIALS=/creds/gcs-credentials.json
    command:
      - store
      - --debug.name=store
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --data-dir=/thanos_store
      - --objstore.config-file=/creds/minio.yaml
      - --cluster.address=0.0.0.0:10900
      #TODO all query servers 
      - --cluster.peers=c1-query:10900
    ports:
      - 10903:10902

  #compact:
  #  depends_on:
  #    - store
  #  #image: improbable/thanos:${THANOS_TAG}
  #  image: thanos-exp/thanos:latest
  #  volumes:
  #    - ./creds:/creds
  #    - compact:/thanos_compact
  #  networks:
  #    - store
  #  #environment:
  #  #  - GOOGLE_APPLICATION_CREDENTIALS=/creds/gcs-credentials.json
  #  command:
  #    - compact
  #    - --debug.name=compact
  #    - --log.level=debug
  #    - --http-address=0.0.0.0:10902
  #    - --data-dir=/thanos_compact
  #    - --objstore.config-file=/creds/minio.yaml
  #    - --retention.resolution-raw=1d
  #    - --retention.resolution-5m=2d
  #    - --retention.resolution-1h=5d
  #  ports:
  #    - 10904:10902

  c1-query:
    depends_on:
      - store
    #image: improbable/thanos:${THANOS_TAG}
    image: thanos-exp/thanos:latest
    networks:
      - c1
      - ops
    command:
      - query
      - --debug.name=c1-query
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --cluster.address=0.0.0.0:10900
      - --cluster.peers=store:10900
    ports:
      - 19101:10902
  c2-query:
    depends_on:
      - store
    #image: improbable/thanos:${THANOS_TAG}
    image: thanos-exp/thanos:latest
    networks:
      - c2
      - ops
    command:
      - query
      - --debug.name=c2-query
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --cluster.address=0.0.0.0:10900
      - --cluster.peers=store:10900
    ports:
      - 19102:10902
  c3-query:
    depends_on:
      - store
    #image: improbable/thanos:${THANOS_TAG}
    image: thanos-exp/thanos:latest
    networks:
      - c3
      - ops
    command:
      - query
      - --debug.name=c3-query
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --cluster.address=0.0.0.0:10900
      - --cluster.peers=store:10900
    ports:
      - 19103:10902
