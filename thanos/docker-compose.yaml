version: "3.5"

volumes:
  c1-prom: {}
  c1-shared-config: {}
  c2-prom: {}
  c2-shared-config: {}
  c3-prom: {}
  c3-shared-config: {}
  c1-store: {}
  c2-store: {}
  c3-store: {}
  c1-grafana: {}
  c2-grafana: {}
  c3-grafana: {}
  store-s3: {}
  meta-grafana: {}

networks:
  c1:
  c2:
  c3:
  store:
  meta:

services:
  c1-prom:
    depends_on:
      - c1-sidecar
    image: prom/prometheus:v2.9.1
    # Set user to root, otherwise shared tsdb directory is not readable by one of the instances
    user: root
    volumes:
      - c1-shared-config:/config
      - c1-prom:/prometheus
    networks:
      - c1
    command:
      - --web.listen-address=0.0.0.0:9090
      - --config.file=/config/prometheus.yml
      - --storage.tsdb.path=/prometheus
      # recommended > 3x block-duration
      - --storage.tsdb.retention.time=6h
      # recomended 2h
      - --storage.tsdb.min-block-duration=2h
      # recomended 2h
      - --storage.tsdb.max-block-duration=2h
      # needed for reloading
      - --web.enable-lifecycle
      - --web.enable-admin-api
      - --log.level=warn
    ports:
      - 19011:9090
  c1-sidecar:
    image: improbable/thanos:v0.3.2
    # Set user to root, otherwise shared tsdb directory is not readable by one of the instances
    user: root
    volumes:
      - ./template:/template
      - ./creds:/creds
      - c1-prom:/prometheus
      - c1-shared-config:/config
    networks:
      - c1
      - store
    environment:
      - CLUSTER=c1
      - REPLICA=c1-prom-01
      - GOOGLE_APPLICATION_CREDENTIALS=/creds/gcs-credentials.json
    command:
      - sidecar
      - --cluster.disable
      - --log.level=warn
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --prometheus.url=http://c1-prom:9090
      - --tsdb.path=/prometheus
      - --objstore.config-file=/creds/bucket_config.c1
      - --reloader.config-file=/template/prometheus.yml.tpl
      - --reloader.config-envsubst-file=/config/prometheus.yml
    ports:
      - 19012:10902
  c1-query:
    image: improbable/thanos:v0.3.2
    networks:
      - c1
    command:
      - query
      - --cluster.disable
      - --log.level=warn
      - --query.auto-downsampling
      - --query.partial-response
      - --query.replica-label=replica
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --store=c1-sidecar:10901
      - --store=c1-store:10901
    ports:
      - 19013:10902
  c1-store:
    # S3 storage must be accessible before starting store
    depends_on:
      - store-s3
    image: improbable/thanos:v0.3.2
    volumes:
      - ./creds:/creds
      - c1-store:/thanos_store
    networks:
      - c1
      - store
    command:
      - store
      - --cluster.disable
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --data-dir=/thanos_store
      - --objstore.config-file=/creds/bucket_config.c1
    ports:
      - 19014:10902
  c1-grafana:
    image: grafana/grafana:6.1.4
    ports:
      - 19015:3000
    volumes:
      - ./grafana/c1/provisioning:/provisioning
      - c1-grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=pass
      - GF_PATHS_PROVISIONING=/provisioning
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_LOG_LEVEL=warn
    networks:
      - c1

  c2-prom:
    depends_on:
      - c2-sidecar
    image: prom/prometheus:v2.9.1
    # Set user to root, otherwise shared tsdb directory is not readable by one of the instances
    user: root
    volumes:
      - c2-shared-config:/config
      - c2-prom:/prometheus
    networks:
      - c2
    command:
      - --web.listen-address=0.0.0.0:9090
      - --config.file=/config/prometheus.yml
      - --storage.tsdb.path=/prometheus
      # recommended > 3x block-duration
      - --storage.tsdb.retention.time=6h
      # recomended 2h
      - --storage.tsdb.min-block-duration=2h
      # recomended 2h
      - --storage.tsdb.max-block-duration=2h
      # needed for reloading
      - --web.enable-lifecycle
      - --web.enable-admin-api
      - --log.level=warn
    ports:
      - 19021:9090
  c2-sidecar:
    image: improbable/thanos:v0.3.2
    # Set user to root, otherwise shared tsdb directory is not readable by one of the instances
    user: root
    volumes:
      - ./template:/template
      - ./creds:/creds
      - c2-prom:/prometheus
      - c2-shared-config:/config
    networks:
      - c2
      - store
    environment:
      - CLUSTER=c2
      - REPLICA=c2-prom-01
      - GOOGLE_APPLICATION_CREDENTIALS=/creds/gcs-credentials.json
    command:
      - sidecar
      - --cluster.disable
      - --log.level=warn
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --prometheus.url=http://c2-prom:9090
      - --tsdb.path=/prometheus
      - --objstore.config-file=/creds/bucket_config.c2
      - --reloader.config-file=/template/prometheus.yml.tpl
      - --reloader.config-envsubst-file=/config/prometheus.yml
    ports:
      - 19022:10902
  c2-query:
    image: improbable/thanos:v0.3.2
    networks:
      - c2
    command:
      - query
      - --cluster.disable
      - --log.level=warn
      - --query.auto-downsampling
      - --query.partial-response
      - --query.replica-label=replica
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --store=c2-sidecar:10901
      - --store=c2-store:10901
    ports:
      - 19023:10902
  c2-store:
    # S3 storage must be accessible before starting store
    depends_on:
      - store-s3
    image: improbable/thanos:v0.3.2
    volumes:
      - ./creds:/creds
      - c2-store:/thanos_store
    networks:
      - c2
      - store
    command:
      - store
      - --cluster.disable
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --data-dir=/thanos_store
      - --objstore.config-file=/creds/bucket_config.c2
    ports:
      - 19024:10902
  c2-grafana:
    image: grafana/grafana:6.1.4
    ports:
      - 19025:3000
    volumes:
      - ./grafana/c2/provisioning:/provisioning
      - c2-grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=pass
      - GF_PATHS_PROVISIONING=/provisioning
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_LOG_LEVEL=warn
    networks:
      - c2

  c3-prom:
    depends_on:
      - c3-sidecar
    image: prom/prometheus:v2.9.1
    # Set user to root, otherwise shared tsdb directory is not readable by one of the instances
    user: root
    volumes:
      - c3-shared-config:/config
      - c3-prom:/prometheus
    networks:
      - c3
    command:
      - --web.listen-address=0.0.0.0:9090
      - --config.file=/config/prometheus.yml
      - --storage.tsdb.path=/prometheus
      # recommended > 3x block-duration
      - --storage.tsdb.retention.time=6h
      # recomended 2h
      - --storage.tsdb.min-block-duration=2h
      # recomended 2h
      - --storage.tsdb.max-block-duration=2h
      # needed for reloading
      - --web.enable-lifecycle
      - --web.enable-admin-api
      - --log.level=warn
    ports:
      - 19031:9090
  c3-sidecar:
    image: improbable/thanos:v0.3.2
    # Set user to root, otherwise shared tsdb directory is not readable by one of the instances
    user: root
    volumes:
      - ./template:/template
      - ./creds:/creds
      - c3-prom:/prometheus
      - c3-shared-config:/config
    networks:
      - c3
      - store
    environment:
      - CLUSTER=c3
      - REPLICA=c3-prom-01
      - GOOGLE_APPLICATION_CREDENTIALS=/creds/gcs-credentials.json
    command:
      - sidecar
      - --cluster.disable
      - --log.level=warn
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --prometheus.url=http://c3-prom:9090
      - --tsdb.path=/prometheus
      - --objstore.config-file=/creds/bucket_config.c3
      - --reloader.config-file=/template/prometheus.yml.tpl
      - --reloader.config-envsubst-file=/config/prometheus.yml
    ports:
      - 19032:10902
  c3-query:
    image: improbable/thanos:v0.3.2
    networks:
      - c3
    command:
      - query
      - --cluster.disable
      - --log.level=warn
      - --query.auto-downsampling
      - --query.partial-response
      - --query.replica-label=replica
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --store=c3-sidecar:10901
      - --store=c3-store:10901
    ports:
      - 19033:10902
  c3-store:
    # S3 storage must be accessible before starting store
    depends_on:
      - store-s3
    image: improbable/thanos:v0.3.2
    volumes:
      - ./creds:/creds
      - c3-store:/thanos_store
    networks:
      - c3
      - store
    command:
      - store
      - --cluster.disable
      - --log.level=debug
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --data-dir=/thanos_store
      - --objstore.config-file=/creds/bucket_config.c3
    ports:
      - 19034:10902
  c3-grafana:
    image: grafana/grafana:6.1.4
    ports:
      - 19035:3000
    volumes:
      - ./grafana/c3/provisioning:/provisioning
      - c3-grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=pass
      - GF_PATHS_PROVISIONING=/provisioning
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_LOG_LEVEL=warn
    networks:
      - c3

  meta-query:
    image: improbable/thanos:v0.3.2
    networks:
      - meta
      - c1
      - c2
      - c3
    command:
      - query
      - --cluster.disable
      - --debug.name=meta-query
      - --log.level=debug
      # Test this setting
      - --query.auto-downsampling
      - --query.partial-response
      # Test this setting
      - --query.replica-label=replica
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --store=c1-query:10901
      - --store=c2-query:10901
      - --store=c3-query:10901
    ports:
      - 19043:10902

  meta-grafana:
    image: grafana/grafana:6.1.4
    ports:
      - 19045:3000
    volumes:
      - ./grafana/meta/provisioning:/provisioning
      - meta-grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=pass
      - GF_PATHS_PROVISIONING=/provisioning
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_LOG_LEVEL=warn
    networks:
      - meta

  store-s3:
    image: minio/minio:latest
    volumes:
      - store-s3:/export
    networks:
      - store
    environment:
      - "MINIO_ACCESS_KEY=THANOS"
      - "MINIO_SECRET_KEY=ITSTHANOSTIME"
    entrypoint: sh
    command: -c 'mkdir -p /export/bucket001 && mkdir -p /export/bucket002 && mkdir -p /export/bucket003 && /usr/bin/minio server /export'
    ports:
      - 19000:9000
